# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http:# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{
  types: [
    {from: "Int", to: "BigInt", major: "Fixed"},
    {from: "Float4", to: "Float8", major: "Fixed" }, 
    {from: "Int", to: "Float4", major: "Fixed" },
    {from: "BigInt", to: "Float4", major: "Fixed" },
    {from: "Int", to: "Float8", major: "Fixed" },
    {from: "BigInt", to: "Float8", major: "Fixed" },
    {to: "Int", from: "BigInt", explicit: "int", major: "Fixed"},
    {to: "Float4", from: "Float8" , explicit: "float", major: "Fixed"}, 
    {to: "Int", from: "Float4" , explicit: "int", major: "Fixed"},
    {to: "BigInt", from: "Float4" , explicit: "long", major: "Fixed"},
    {to: "Int", from: "Float8" , explicit: "int", major: "Fixed"},
    {to: "BigInt", from: "Float8" , explicit: "long", major: "Fixed"},
    
    {from: "VarChar", to: "BigInt", major: "SrcVarlen", javaType: "Long", primeType: "long"},
    {from: "VarChar", to: "Int", major: "SrcVarlen", javaType:"Integer", primeType:"int"},
    {from: "VarBinary", to: "BigInt", major: "SrcVarlen", javaType: "Long", primeType : "long"},
    {from: "VarBinary", to: "Int", major: "SrcVarlen", javaType:"Integer", primeType : "int"},   
    {from: "VarChar", to: "Float4", major: "SrcVarlen", javaType:"Float", parse:"Float"},
    {from: "VarChar", to: "Float8", major: "SrcVarlen", javaType:"Double", parse:"Double"},
    {from: "VarBinary", to: "Float4", major: "SrcVarlen", javaType:"Float", parse:"Float"},
    {from: "VarBinary", to: "Float8", major: "SrcVarlen", javaType:"Double", parse:"Double"}, 

    {from: "BigInt", to: "VarChar", major: "TargetVarlen", javaType: "Long", bufferLength:"20"},
    {from: "Int", to: "VarChar", major: "TargetVarlen", javaType: "Integer", bufferLength:"11"},
    {from: "Float4", to: "VarChar", major: "TargetVarlen", javaType: "Float", bufferLength:"100"},
    {from: "Float8", to: "VarChar", major: "TargetVarlen", javaType: "Double", bufferLength:"100"},
    {from: "BigInt", to: "VarBinary", major: "TargetVarlen", javaType: "Long", bufferLength:"20"},
    {from: "Int", to: "VarBinary", major: "TargetVarlen", javaType: "Integer", bufferLength:"11"},
    {from: "Float4", to: "VarBinary", major: "TargetVarlen", javaType: "Float", bufferLength:"100"},
    {from: "Float8", to: "VarBinary", major: "TargetVarlen", javaType: "Double", bufferLength:"100"},     
    
    {from: "VarBinary", to: "VarChar", major: "SrcVarlenTargetVarlen"},
    {from: "VarChar", to: "VarBinary", major: "SrcVarlenTargetVarlen"}     
  ]
} 
